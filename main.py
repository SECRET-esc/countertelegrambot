from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

import config
import telebot
import database

bot = telebot.TeleBot(config.token, parse_mode=None)
chat_id = ""
wait_sum = False
wait_show = False
is_autorizated = False


@bot.message_handler(commands=['start'])
def send_welcome(message):
    global chat_id
    global is_autorizated
    chat_id = message.chat.id
    if database.registerUser(message.from_user.username, message.from_user.id):
        bot.send_message(chat_id, "–ü—Ä–∏–≤–µ—Ç, —Ç—ã –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –∏ –º–æ–∂–µ—à—å —Ä–∞–±–æ—Ç–∞—Ç—å!")
        is_autorizated = True
        send_menu(message)
    else:
        # bot.send_message(chat_id, "–¢—ã —É–∂–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!")
        is_autorizated = True
        send_menu(message)


def gen_markup():
    markup = InlineKeyboardMarkup()
    markup.row_width = 2
    markup.add(InlineKeyboardButton("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—É–º–º—É üíµ", callback_data="show_sum"), InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å —Å—É–º–º—É üí∞", callback_data="add_sum"))
    return markup


@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    if call.data == "show_sum":
        global wait_show
        wait_show = True
        show_sum(call.message)
    elif call.data == "add_sum":
        global wait_sum
        wait_sum = True
        bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏ —Å—É–º–º—É –∫–æ—Ç–æ—Ä—É—é —Ç—ã —Ö–æ—á–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å (—Ç–≤–æ–µ –∏–º—è –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)')
        # bot.answer_callback_query(call.id, "Answer is No")
    elif call.data == "backShow":
        wait_show = False
        send_menu(call.message)


def send_menu(message):
    bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–Ω—é!", reply_markup=gen_markup())


# Handle all other messages with content_type 'text' (content_types defaults to ['text'])
@bot.message_handler(func=lambda message: True)
def echo_message(message):
    global wait_sum
    if is_autorizated:
        if wait_sum:
            if message.text.isnumeric():
                if database.addSum(message.text, message.from_user.id):
                    bot.send_message(message.chat.id, "–ü–æ–ª—É—á–∏–ª–æ—Å—å!üéâ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!", reply_markup=getButtonBackShow())
                    wait_sum = False
                else:
                    bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞!üòî –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!", reply_markup=getButtonBackShow())
                    wait_sum = False

            else:
                bot.send_message(message.chat.id, "–°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ —É–∫–∞–∑—ã–≤–∞—Ç—Å—è –≤ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö —Ü–∏—Ñ—Ä–∞—Ö! \n\n –ü—Ä–∏–º–µ—Ä:\n\n  900", reply_markup=getButtonBackShow())
                wait_sum = False
        else:
            send_menu(message)
    else:
        send_welcome(message)


def getButtonBackShow():
    markup = InlineKeyboardMarkup()
    markup.row_width = 1
    markup.add(InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="backShow"))
    return markup


def getButtonBackAdd():
    markup = InlineKeyboardMarkup()
    markup.row_width = 1
    markup.add(InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="backAdd"))
    return markup


def show_sum(message):
    res = database.showSum()
    string = ''
    i = 1
    for row in res:
        string += f'{i}. {row[2]} - {row[3]}\n\n'
        i = i + 1
    bot.send_message(message.chat.id, f"–¢–æ–ø 3 —Å—É–º–º—ã –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç:\n\n{string}", reply_markup=getButtonBackShow())
    # send_menu(message)


bot.polling()
